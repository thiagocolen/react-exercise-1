{"version":3,"sources":["store/mainSlice.js","components/bgImage.js","api/unsplashApi.js","components/header.js","components/userList.js","api/authApi.js","api/usersApi.js","api/userIdApi.js","api/userActivitiesApi.js","components/userDetails.js","api/programNameApi.js","api/programsLevelsApi.js","components/userActivitiesList.js","App.js","store/index.js","reportWebVitals.js","index.js"],"names":["formatDate","date","formatedDate","replace","split","moment","fromNow","mainSlice","createSlice","name","initialState","data","authToken","usersList","selectedUserDetails","showSelectedUserDetailsLoader","userActivitiesList","showUserActivitiesListLoader","selectedUserProgramName","selectedProgramLevelsList","backgroundImageUrl","programLevelMarks","selectedProgramLevel","reducers","increment","state","getAuth","action","payload","token","getUsers","userList","sort","a","b","balance","points","cleanUserDetailData","getUserDetail","number","formatedCurrency","currency","Intl","NumberFormat","style","format","getUserActivities","map","item","fomatedDate","icon","description","getProgramName","getProgramLevels","getBackgroundImageUrl","setProgramLevelMarks","setSelectedProgramLevel","mainActions","actions","BgImageComponent","dispatch","useDispatch","useSelector","mainReducer","useEffect","console","log","process","UNSPLASH_ACCESS_KEY","backgroundImageData","fetch","method","response","json","backgroundImage","urls","regular","bgImageStyle","backgroundRepeat","backgroundSize","backgroundPosition","position","left","right","top","bottom","zIndex","useStyles","makeStyles","theme","colorPrimary","backgroundColor","palette","common","white","HeaderComponent","classes","AppBar","Toolbar","Box","mr","color","green","fontSize","flexGrow","Typography","variant","textAlign","Link","href","target","underline","Avatar","alt","src","usersLoaded","smallAvatar","width","spacing","height","overFlow","overflow","boxShadow","borderRadius","UserListComponent","auth","headers","users","userDetailHandler","event","userId","currentTarget","attributes","value","user","userDetails","UserIdApi","userActivities","UserActivitiesApi","length","my","CircularProgress","mx","Grid","container","xs","List","className","component","index","ListItem","button","id","onClick","mt","image","box","avatar","margin","sliderRoot","marginTop","sliderMarkLabel","fontWeight","sliderThumb","blue","UserDetailsComponent","programId","programData","programName","programLevelsList","ProgramLevels","marks","order","label","selectedMark","find","levelId","p","mb","Divider","textCenter","marginRight","marginBottom","miles","Slider","root","markLabel","thumb","disabled","step","min","max","defaultValue","blueColor","fill","info","dark","greenColor","success","yellowColor","warning","UserActivitiesListComponent","m","createTheme","primary","main","grey","secondary","typography","fontFamily","join","h1","h2","h3","h4","h5","h6","body1","body2","App","ThemeProvider","Container","maxWidth","md","Paper","store","configureStore","reducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6d8b84f.chunk.js","sourcesContent":["import moment from \"moment\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst formatCurrency = (number) => {\r\n  return new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  }).format(number);\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  let formatedDate = date.replace(\"--\", \"-\").split(\"-\");\r\n  return moment([\r\n    formatedDate[0],\r\n    formatedDate[1] - 1,\r\n    formatedDate[2],\r\n  ]).fromNow();\r\n};\r\n\r\nconst getIcon = (description) => {\r\n  const descriptionType = description.split(\" \");\r\n  return descriptionType[0];\r\n};\r\n\r\nconst initialState = {\r\n  data: 1,\r\n  authToken: null,\r\n  usersList: [],\r\n  selectedUserDetails: null,\r\n  showSelectedUserDetailsLoader: false,\r\n  userActivitiesList: [],\r\n  showUserActivitiesListLoader: false,\r\n  selectedUserProgramName: null,\r\n  selectedProgramLevelsList: [],\r\n  backgroundImageUrl: null,\r\n  programLevelMarks: [],\r\n  selectedProgramLevel: null,\r\n};\r\n\r\nconst mainSlice = createSlice({\r\n  name: \"mainSlice\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.data++;\r\n    },\r\n    getAuth(state, action) {\r\n      state.authToken = action.payload.token;\r\n    },\r\n    getUsers(state, action) {\r\n      const userList = [...action.payload];\r\n      userList.sort((a, b) => {\r\n        return b.balance.points - a.balance.points;\r\n      });\r\n      state.usersList = userList;\r\n    },\r\n    cleanUserDetailData(state) {\r\n      state.showSelectedUserDetailsLoader = true;\r\n      state.showUserActivitiesListLoader = true;\r\n      state.selectedUserDetails = null;\r\n      state.userActivitiesList = [];\r\n      state.selectedUserProgramName = null;\r\n      state.selectedProgramLevelsList = [];\r\n    },\r\n    getUserDetail(state, action) {\r\n      state.selectedUserDetails = {\r\n        ...action.payload,\r\n        balance: {\r\n          ...action.payload.balance,\r\n          formatedCurrency: formatCurrency(action.payload.balance.currency),\r\n        },\r\n      };\r\n    },\r\n    getUserActivities(state, action) {\r\n      state.userActivitiesList = action.payload.map((item) => {\r\n        return {\r\n          ...item,\r\n          fomatedDate: formatDate(item.date),\r\n          icon: getIcon(item.description),\r\n        };\r\n      });\r\n    },\r\n    getProgramName(state, action) {\r\n      state.selectedUserProgramName = action.payload.name;\r\n    },\r\n    getProgramLevels(state, action) {\r\n      state.selectedProgramLevelsList = action.payload;\r\n    },\r\n    getBackgroundImageUrl(state, action) {\r\n      state.backgroundImageUrl = action.payload;\r\n    },\r\n    setProgramLevelMarks(state, action) {\r\n      state.programLevelMarks = action.payload;\r\n    },\r\n    setSelectedProgramLevel(state, action) {\r\n      state.selectedProgramLevel = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const mainActions = mainSlice.actions;\r\n\r\nexport default mainSlice.reducer;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { BingApi } from \"../api/bingApi\";\r\nimport { UnsplashApi } from \"../api/unsplashApi\";\r\n\r\nconst BgImageComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const backgroundImageUrl = useSelector(\r\n    (state) => state.mainReducer.backgroundImageUrl\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(UnsplashApi());\r\n    // dispatch(BingApi());\r\n  }, [dispatch]);\r\n\r\n  const bgImageStyle = {\r\n    backgroundImage: \"url(\" + backgroundImageUrl + \")\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    right: \"0\",\r\n    top: \"0\",\r\n    bottom: \"0\",\r\n    zIndex: \"-1\",\r\n  };\r\n\r\n  return <div data-testid=\"bg-image-component\" style={bgImageStyle}></div>;\r\n};\r\n\r\nexport default BgImageComponent;\r\n","import { mainActions } from \"../store/mainSlice\";\r\n// require(\"dotenv\").config();\r\n\r\nexport const UnsplashApi = () => {\r\n\r\n  console.log('env.UNSPLASH_ACCESS_KEY', process.env.UNSPLASH_ACCESS_KEY)\r\n\r\n  return async (dispatch) => {\r\n    const backgroundImageData = async () => {\r\n      const response = await fetch(`https://api.unsplash.com/photos/random/?topics=6sMVjTLSkeQ&client_id=7bb44829ebfb671742ab6f123c6581e0eca237754773b58d64940a82c82065f9`, {\r\n        method: \"GET\",\r\n      });\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const backgroundImage = await backgroundImageData();\r\n      dispatch(mainActions.getBackgroundImageUrl(backgroundImage.urls.regular));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport EcoIcon from \"@material-ui/icons/Eco\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  colorPrimary: {\r\n    backgroundColor: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst HeaderComponent = () => {\r\n  const thiagoColenAvatarUrl =\r\n    \"https://media-exp1.licdn.com/dms/image/C4D03AQH8hRQxScoIcA/profile-displayphoto-shrink_200_200/0/1538777195418?e=1635984000&v=beta&t=UfvVtfqbnuwhcmNNAFRCWSdgESD5UHipv8Lng-LTUxk\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar data-testid=\"header-component\" position=\"fixed\" classes={{ colorPrimary: classes.colorPrimary }}>\r\n      <Toolbar>\r\n        <Box mr={2}>\r\n          <EcoIcon style={{ color: green[900] }} fontSize=\"large\" />\r\n        </Box>\r\n        <Box flexGrow={8}>\r\n          <Typography color=\"primary\" variant=\"h5\">\r\n            React Exercise\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box textAlign=\"right\" flexGrow={2} mr={2}>\r\n          <Link\r\n            href=\"https://www.linkedin.com/in/thiagocolen/\"\r\n            target=\"_blank\"\r\n            color=\"secondary\"\r\n            variant=\"h6\"\r\n            underline=\"none\"\r\n          >\r\n            Thiago Colen\r\n          </Link>\r\n        </Box>\r\n        <Box flexGrow={0}>\r\n          <Avatar alt=\"Thiago Colen\" src={thiagoColenAvatarUrl} />\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default HeaderComponent;\r\n","import { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { AuthApi } from \"../api/authApi\";\r\nimport { UsersApi } from \"../api/usersApi\";\r\nimport { mainActions } from \"../store/mainSlice\";\r\nimport { UserIdApi } from \"../api/userIdApi\";\r\nimport { UserActivitiesApi } from \"../api/userActivitiesApi\";\r\n\r\nlet usersLoaded = false;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  smallAvatar: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  overFlow: {\r\n    overflow: \"auto\",\r\n    height: 383,\r\n    \"&::-webkit-scrollbar\": {\r\n      width: 6,\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      boxShadow: `inset 0 0 6px rgba(0, 0, 0, 0.3)`,\r\n      borderRadius: 3,\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"grey\",\r\n      borderRadius: 3,\r\n    },\r\n  },\r\n}));\r\n\r\nconst UserListComponent = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const token = useSelector((state) => state.mainReducer.authToken);\r\n  const usersList = useSelector((state) => state.mainReducer.usersList);\r\n\r\n  useEffect(() => {\r\n    dispatch(AuthApi());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (usersLoaded === false && token !== null) {\r\n      usersLoaded = true;\r\n      dispatch(UsersApi(token));\r\n    }\r\n  }, [token, dispatch]);\r\n\r\n  const userDetailHandler = (event) => {\r\n    const userId = event.currentTarget.attributes.value.value;\r\n    dispatch(mainActions.cleanUserDetailData());\r\n    dispatch(UserIdApi(token, userId));\r\n    dispatch(UserActivitiesApi(token, userId));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {usersList.length === 0 && (\r\n        <Box my={20} textAlign=\"center\" data-testid=\"user-list-component-loading\">\r\n          <CircularProgress  color=\"secondary\" />\r\n        </Box>\r\n      )}\r\n      {usersList.length > 0 && (\r\n        <Fragment>\r\n          <Box my={1} mx={2} data-testid=\"user-list-component-loaded\">\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                <Typography color=\"secondary\" variant=\"h3\">\r\n                  Pos.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={8}>\r\n                <Typography color=\"secondary\" variant=\"h3\">\r\n                  Member\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Typography color=\"secondary\" variant=\"h3\">\r\n                  Points\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <List className={classes.overFlow} component=\"nav\">\r\n            {usersList &&\r\n              usersList.map((item, index) => (\r\n                <ListItem\r\n                  button\r\n                  key={item.id}\r\n                  value={item.id}\r\n                  onClick={userDetailHandler}\r\n                >\r\n                  <Grid container>\r\n                    <Grid item xs={2}>\r\n                      <Box mt={0.6}>\r\n                        <Typography color=\"primary\" variant=\"h3\">\r\n                          {index + 1}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Avatar\r\n                        className={classes.smallAvatar}\r\n                        alt=\"User face\"\r\n                        src={item.image}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Box mt={0.6}>\r\n                        <Typography color=\"primary\" variant=\"h3\">\r\n                          {item.name}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <Box mt={0.6}>\r\n                        <Typography color=\"primary\" variant=\"h3\">\r\n                          {item.balance.points}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                </ListItem>\r\n              ))}\r\n          </List>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserListComponent;\r\n","import { mainActions } from \"../store/mainSlice\";\r\n\r\nexport const AuthApi = () => {\r\n  return async (dispatch) => {\r\n    const auth = async () => {\r\n      const response = await fetch(\r\n        \"https://challenge-fielo.herokuapp.com/auth\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"x-app-id\":\r\n              \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCh7uxHjWd1CyRgPD4XHcIPKiDb\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const authToken = await auth();\r\n      dispatch(mainActions.getAuth(authToken));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import { mainActions } from \"../store/mainSlice\";\r\n\r\nexport const UsersApi = (authToken) => {\r\n  return async (dispatch) => {\r\n    const users = async () => {\r\n      const response = await fetch(\r\n        \"https://challenge-fielo.herokuapp.com/users\",\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-access-token\": authToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const usersList = await users();\r\n      dispatch(mainActions.getUsers(usersList));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import { mainActions } from \"../store/mainSlice\";\r\n\r\nexport const UserIdApi = (authToken, userId) => {\r\n  return async (dispatch) => {\r\n    const user = async () => {\r\n      const response = await fetch(\r\n        `https://challenge-fielo.herokuapp.com/users/${userId}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-access-token\": authToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const userDetails = await user();\r\n      dispatch(mainActions.getUserDetail(userDetails));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import { mainActions } from \"../store/mainSlice\";\r\n\r\nexport const UserActivitiesApi = (authToken, userId) => {\r\n  return async (dispatch) => {\r\n    const userActivities = async () => {\r\n      const response = await fetch(\r\n        `https://challenge-fielo.herokuapp.com/users/${userId}/activities`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-access-token\": authToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const userActivitiesList = await userActivities();\r\n      dispatch(mainActions.getUserActivities(userActivitiesList));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import { Fragment, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AllInclusiveIcon from \"@material-ui/icons/AllInclusive\";\r\nimport FlareIcon from \"@material-ui/icons/Flare\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { mainActions } from \"../store/mainSlice\";\r\nimport { ProgramName } from \"../api/programNameApi\";\r\nimport { ProgramLevels } from \"../api/programsLevelsApi\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    height: 420,\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n    margin: \"auto\",\r\n  },\r\n  sliderRoot: {\r\n    width: \"100%\",\r\n    marginTop: 40,\r\n  },\r\n  sliderMarkLabel: {\r\n    top: -24,\r\n    fontWeight: \"bold\",\r\n    fontSize: 14,\r\n  },\r\n  sliderThumb: {\r\n    color: blue[900],\r\n  },\r\n}));\r\n\r\nconst UserDetailsComponent = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const token = useSelector((state) => state.mainReducer.authToken);\r\n\r\n  const selectedUserDetails = useSelector(\r\n    (state) => state.mainReducer.selectedUserDetails\r\n  );\r\n\r\n  const selectedUserProgramName = useSelector(\r\n    (state) => state.mainReducer.selectedUserProgramName\r\n  );\r\n\r\n  const selectedProgramLevelsList = useSelector(\r\n    (state) => state.mainReducer.selectedProgramLevelsList\r\n  );\r\n\r\n  const programLevelMarks = useSelector(\r\n    (state) => state.mainReducer.programLevelMarks\r\n  );\r\n\r\n  const selectedProgramLevel = useSelector(\r\n    (state) => state.mainReducer.selectedProgramLevel\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (selectedUserDetails) {\r\n      dispatch(ProgramName(token, selectedUserDetails.programId));\r\n      dispatch(ProgramLevels(token, selectedUserDetails.programId));\r\n    }\r\n  }, [token, selectedUserDetails, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProgramLevelsList.length > 0) {\r\n      let marks = selectedProgramLevelsList.map((item) => {\r\n        return { value: item.order, label: item.name };\r\n      });\r\n      dispatch(mainActions.setProgramLevelMarks(marks));\r\n    }\r\n  }, [selectedProgramLevelsList, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (programLevelMarks.length > 0) {\r\n      let selectedMark = selectedProgramLevelsList.find((item) => {\r\n        return item.id === selectedUserDetails.levelId;\r\n      });\r\n      dispatch(mainActions.setSelectedProgramLevel(selectedMark));\r\n    }\r\n  }, [\r\n    programLevelMarks,\r\n    selectedProgramLevelsList,\r\n    selectedUserDetails,\r\n    dispatch,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!selectedUserDetails && (\r\n        <Box my={20} textAlign=\"center\" data-testid=\"user-details-component-loading\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      )}\r\n      {selectedUserDetails && (\r\n        <Box p={0.5} className={classes.box} data-testid=\"user-details-component-loaded\">\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Box mt={2}>\r\n                <Avatar\r\n                  className={classes.avatar}\r\n                  alt=\"User face\"\r\n                  src={selectedUserDetails.image}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Box mt={3} mb={1} mx={3}>\r\n                  <Typography color=\"primary\" variant=\"h1\">\r\n                    {selectedUserDetails.name}\r\n                  </Typography>\r\n                </Box>\r\n                <Box mb={3} mx={3}>\r\n                  <Typography color=\"secondary\" variant=\"h4\">\r\n                    {selectedUserProgramName}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Box mx={1} my={3} textAlign=\"center\">\r\n            <Grid container>\r\n              <Grid item xs={4} className={classes.textCenter}>\r\n                <Box mb={1}>\r\n                  <Typography color=\"primary\" variant=\"h2\">\r\n                    <AllInclusiveIcon\r\n                      style={{\r\n                        color: blue[800],\r\n                        fontSize: 17,\r\n                        marginRight: 3,\r\n                        marginBottom: -3,\r\n                      }}\r\n                    />\r\n                    {selectedUserDetails.balance.points}\r\n                  </Typography>\r\n                </Box>\r\n                <Typography color=\"secondary\" variant=\"h4\" mt={2}>\r\n                  Points\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={4} className={classes.textCenter}>\r\n                <Box mb={1}>\r\n                  <Typography color=\"primary\" variant=\"h2\">\r\n                    {selectedUserDetails.balance.miles}\r\n                  </Typography>\r\n                </Box>\r\n                <Typography color=\"secondary\" variant=\"h4\">\r\n                  Miles\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={4} className={classes.textCenter}>\r\n                <Box mb={1}>\r\n                  <Typography color=\"primary\" variant=\"h2\">\r\n                    {selectedUserDetails.balance.formatedCurrency}\r\n                  </Typography>\r\n                </Box>\r\n                <Typography color=\"secondary\" variant=\"h4\">\r\n                  Currency\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Divider />\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              {selectedProgramLevel && (\r\n                <Box mx={4}>\r\n                  <Slider\r\n                    classes={{\r\n                      root: classes.sliderRoot,\r\n                      markLabel: classes.sliderMarkLabel,\r\n                      thumb: classes.sliderThumb,\r\n                    }}\r\n                    aria-labelledby=\"discrete-slider-custom\"\r\n                    disabled={true}\r\n                    marks={programLevelMarks}\r\n                    step={1}\r\n                    min={1}\r\n                    max={programLevelMarks.length}\r\n                    defaultValue={selectedProgramLevel.order}\r\n                  />\r\n                </Box>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Box textAlign=\"center\" my={3}>\r\n            <FlareIcon color=\"secondary\" />\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserDetailsComponent;\r\n","import { mainActions } from \"../store/mainSlice\";\r\n\r\nexport const ProgramName = (authToken, programId) => {\r\n  return async (dispatch) => {\r\n    const programData = async () => {\r\n      const response = await fetch(\r\n        `https://challenge-fielo.herokuapp.com/programs/${programId}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-access-token\": authToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const programName = await programData();\r\n      dispatch(mainActions.getProgramName(programName));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n","import { mainActions } from \"../store/mainSlice\";\r\n\r\nexport const ProgramLevels = (authToken, programId) => {\r\n  return async (dispatch) => {\r\n    const programData = async () => {\r\n      const response = await fetch(\r\n        `https://challenge-fielo.herokuapp.com/programs/${programId}/levels`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-access-token\": authToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      return data;\r\n    };\r\n\r\n    try {\r\n        const programLevelsList = await programData();\r\n        dispatch(mainActions.getProgramLevels(programLevelsList));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n  };\r\n};\r\n","import { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflow: \"auto\",\r\n    height: 393,\r\n    \"&::-webkit-scrollbar\": {\r\n      width: 6,\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      boxShadow: `inset 0 0 6px rgba(0, 0, 0, 0.3)`,\r\n      borderRadius: \"3px\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"grey\",\r\n      borderRadius: \"3px\",\r\n    },\r\n  },\r\n  blueColor: {\r\n    fill: theme.palette.info.dark,\r\n  },\r\n  greenColor: {\r\n    fill: theme.palette.success.dark,\r\n  },\r\n  yellowColor: {\r\n    fill: theme.palette.warning.dark,\r\n  },\r\n}));\r\n\r\nconst UserActivitiesListComponent = () => {\r\n  const userActivitiesList = useSelector(\r\n    (state) => state.mainReducer.userActivitiesList\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      {userActivitiesList.length === 0 && (\r\n        <Box my={20} textAlign=\"center\">\r\n          <CircularProgress color=\"secondary\" />\r\n        </Box>\r\n      )}\r\n      {userActivitiesList.length > 0 && (\r\n        <Fragment>\r\n          <Box m={1}>\r\n            <Typography variant=\"h2\">Activitie's Feed</Typography>\r\n          </Box>\r\n          <Box className={classes.root}>\r\n            <List component=\"nav\">\r\n              {userActivitiesList.length > 0 &&\r\n                userActivitiesList.map((item) => (\r\n                  <Fragment key={item.id}>\r\n                    <ListItem>\r\n                      <Grid container>\r\n                        <Grid item xs={2}>\r\n                          {item.icon === \"Received\" && (\r\n                            <RadioButtonCheckedIcon\r\n                              fontSize=\"small\"\r\n                              classes={{\r\n                                root: classes.blueColor,\r\n                              }}\r\n                            />\r\n                          )}\r\n                          {item.icon === \"Completed\" && (\r\n                            <FlagIcon\r\n                              fontSize=\"small\"\r\n                              classes={{\r\n                                root: classes.greenColor,\r\n                              }}\r\n                            />\r\n                          )}\r\n                          {item.icon === \"Redeemed\" && (\r\n                            <LockIcon\r\n                              fontSize=\"small\"\r\n                              classes={{\r\n                                root: classes.yellowColor,\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                          <Box>\r\n                            <Typography variant=\"h4\" color=\"secondary\">\r\n                              {item.fomatedDate}\r\n                            </Typography>\r\n                          </Box>\r\n                          <Box>\r\n                            <Typography variant=\"body1\">\r\n                              {item.description}\r\n                            </Typography>\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </Fragment>\r\n                ))}\r\n            </List>\r\n          </Box>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserActivitiesListComponent;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport BgImageComponent from \"./components/bgImage\";\r\nimport HeaderComponent from \"./components/header\";\r\nimport UserListComponent from \"./components/userList\";\r\nimport UserDetailsComponent from \"./components/userDetails\";\r\nimport UserActivitiesListComponent from \"./components/userActivitiesList\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[900],\r\n    },\r\n    secondary: {\r\n      main: grey[500],\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\"].join(\",\"),\r\n    h1: {\r\n      fontSize: 20,\r\n      fontWeight: \"bolder\",\r\n    },\r\n    h2: {\r\n      fontSize: 16,\r\n      fontWeight: \"bold\",\r\n    },\r\n    h3: {\r\n      fontSize: 12,\r\n      fontWeight: \"bold\",\r\n    },\r\n    h4: {\r\n      fontSize: 12,\r\n      fontWeight: \"bold\",\r\n    },\r\n    h5: {\r\n      fontSize: 16,\r\n      fontWeight: \"bolder\",\r\n    },\r\n    h6: {\r\n      fontSize: 11,\r\n      fontWeight: \"bold\",\r\n    },\r\n    body1: {\r\n      fontSize: 12,\r\n      fontWeight: \"normal\",\r\n    },\r\n    body2: {\r\n      fontSize: 10,\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const showSelectedUserDetailsLoader = useSelector(\r\n    (state) => state.mainReducer.showSelectedUserDetailsLoader\r\n  );\r\n\r\n  const showUserActivitiesListLoader = useSelector(\r\n    (state) => state.mainReducer.showUserActivitiesListLoader\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BgImageComponent />\r\n\r\n      <HeaderComponent />\r\n      <Box mt={15} mb={20}>\r\n        <Container maxWidth=\"md\">\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={4}>\r\n              <Paper>\r\n                <Box p={1}>\r\n                  <UserListComponent />\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              {showSelectedUserDetailsLoader && (\r\n                <Paper>\r\n                  <Box p={1}>\r\n                    <UserDetailsComponent />\r\n                  </Box>\r\n                </Paper>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              {showUserActivitiesListLoader && (\r\n                <Paper>\r\n                  <Box p={1}>\r\n                    <UserActivitiesListComponent />\r\n                  </Box>\r\n                </Paper>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport mainReducer from \"./mainSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    mainReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}